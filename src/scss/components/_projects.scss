.projects {
  --project-overview-width: calc(100% - var(--page-padding) * 2);
  position: relative;
  padding: var(--page-padding) 0;
  width: var(--project-overview-width);
  left: var(--page-padding);
  // transition: all 1s ease-out; // NOTE: was voor transition bij veranderingen --page-padding. kan zonder 'all'.

  > h1 {
    position: absolute;
    color: var(--black-0);
    letter-spacing: 0.2ch;
    font-weight: bold;
    text-transform: uppercase;
    line-height: 1;
    // text-shadow: 2px 1px 1px rgba(black, 0.3),
    //              2px 1.2px 0px var(--black-2),
    //              0px 1px 1px rgba(white, 0.1);
  }

  .projects-wrapper {
    $debug: true;
    $project-teaser-width: 400px;
    $project-teaser-gap: 75px;
    // Op de onderstaande breedte zou de minmax functie moeten switchen naar 1 item per rij.
    // In die situatie willen we een paar dingen anders stylen.
    $projects-overview-width-to-break-at: 2 * $project-teaser-width + $project-teaser-gap;
    $projects-overview-grid-breakpoint: 2 * $page-padding + $projects-overview-width-to-break-at;
    display: grid;
    grid-template-columns: 1fr;
    direction: rtl; // FIXME: bij oneven aantal komt het laatste item op de verkeerde plek terecht
    gap: $project-teaser-gap;
    position: relative;
    --offset: 100px;

    // NOTE: for testing purposes
    @if $debug == true {
      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        width: $projects-overview-width-to-break-at;
        height: 100%;
        outline: 2px solid red;
      }
    }

    .project.teaser {
      max-width: 100%;
      // direction: ltr;
      // FIXME: zet animation om naar GSAP
      // animation: slide-in var(--speed-fast) $easing-cubic calc((var(--nth) - 1) * var(--speed-fast) / 2);
      // transform-origin: 0% 50%;
    }

    @media screen and (min-width: $projects-overview-grid-breakpoint) {
      grid-template-columns: repeat(auto-fit, minmax(#{$project-teaser-width}, 1fr));

      @if $debug == true {
        &::before {
          outline-color: blue;
        }
      }

      .project.teaser {
        &:nth-child(even) {
          // TODO: bij nog bredere schermen heb je 3 items per rij.. hoe pakken we dit aan?
          top: var(--offset);

          &:nth-last-child(1),
          &:nth-last-child(2) {
            margin-bottom: var(--offset);
          }
        }
      }
    }
  }
}

@keyframes slide-in {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: none;
  }
}